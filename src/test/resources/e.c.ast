TranslationUnitDecl 0x7f97d28164d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f97d2816a20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f97d2816740 '__int128'
|-TypedefDecl 0x7f97d2816a90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f97d2816760 'unsigned __int128'
|-TypedefDecl 0x7f97d2816d68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f97d2816b70 'struct __NSConstantString_tag'
|   `-Record 0x7f97d2816ae8 '__NSConstantString_tag'
|-TypedefDecl 0x7f97d2816e00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f97d2816dc0 'char *'
|   `-BuiltinType 0x7f97d2816560 'char'
|-TypedefDecl 0x7f97d28170c8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f97d2817070 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f97d2816ee0 'struct __va_list_tag'
|     `-Record 0x7f97d2816e58 '__va_list_tag'
|-FunctionDecl 0x7f97d301f970 <e.c:3:1, line:12:1> line:3:6 used disp 'void (int, int *)'
| |-ParmVarDecl 0x7f97d2817138 <col:11, col:15> col:15 used n 'int'
| |-ParmVarDecl 0x7f97d301f860 <col:18, col:24> col:22 used x 'int *':'int *'
| `-CompoundStmt 0x7f97d3020328 <line:4:1, line:12:1>
|   |-DeclStmt 0x7f97d301fad0 <line:5:5, col:10>
|   | `-VarDecl 0x7f97d301fa70 <col:5, col:9> col:9 used i 'int'
|   |-ForStmt 0x7f97d3020220 <line:6:5, line:10:5>
|   | |-BinaryOperator 0x7f97d301fb30 <line:6:9, col:11> 'int' '='
|   | | |-DeclRefExpr 0x7f97d301fae8 <col:9> 'int' lvalue Var 0x7f97d301fa70 'i' 'int'
|   | | `-IntegerLiteral 0x7f97d301fb10 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x7f97d301fbd8 <col:13, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x7f97d301fba8 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7f97d301fb58 <col:13> 'int' lvalue Var 0x7f97d301fa70 'i' 'int'
|   | | `-ImplicitCastExpr 0x7f97d301fbc0 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7f97d301fb80 <col:15> 'int' lvalue ParmVar 0x7f97d2817138 'n' 'int'
|   | |-UnaryOperator 0x7f97d301fc28 <col:17, col:18> 'int' postfix '++'
|   | | `-DeclRefExpr 0x7f97d301fc00 <col:17> 'int' lvalue ParmVar 0x7f97d2817138 'n' 'int'
|   | `-CompoundStmt 0x7f97d30201f8 <col:21, line:10:5>
|   |   |-CallExpr 0x7f97d301ff60 <line:7:9, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x7f97d301ff48 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x7f97d301fde0 <col:9> 'int (const char *, ...)' Function 0x7f97d301fc88 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x7f97d301ffb0 <col:16> 'const char *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x7f97d301ff98 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x7f97d301fe48 <col:16> 'char [4]' lvalue "%d "
|   |   | `-ImplicitCastExpr 0x7f97d301ffc8 <col:23, col:26> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x7f97d301fef8 <col:23, col:26> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x7f97d301fec8 <col:23> 'int *':'int *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x7f97d301fe78 <col:23> 'int *':'int *' lvalue ParmVar 0x7f97d301f860 'x' 'int *':'int *'
|   |   |     `-ImplicitCastExpr 0x7f97d301fee0 <col:25> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x7f97d301fea0 <col:25> 'int' lvalue Var 0x7f97d301fa70 'i' 'int'
|   |   `-IfStmt 0x7f97d30201c0 <line:8:9, line:9:24>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x7f97d3020088 <line:8:12, col:18> 'int' '=='
|   |     | |-BinaryOperator 0x7f97d3020040 <col:12, col:14> 'int' '%'
|   |     | | |-ImplicitCastExpr 0x7f97d3020028 <col:12> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x7f97d301ffe0 <col:12> 'int' lvalue Var 0x7f97d301fa70 'i' 'int'
|   |     | | `-IntegerLiteral 0x7f97d3020008 <col:14> 'int' 10
|   |     | `-IntegerLiteral 0x7f97d3020068 <col:18> 'int' 9
|   |     |-CallExpr 0x7f97d3020160 <line:9:13, col:24> 'int'
|   |     | |-ImplicitCastExpr 0x7f97d3020148 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x7f97d30200b0 <col:13> 'int (const char *, ...)' Function 0x7f97d301fc88 'printf' 'int (const char *, ...)'
|   |     | `-ImplicitCastExpr 0x7f97d30201a8 <col:20> 'const char *' <BitCast>
|   |     |   `-ImplicitCastExpr 0x7f97d3020190 <col:20> 'char *' <ArrayToPointerDecay>
|   |     |     `-StringLiteral 0x7f97d3020118 <col:20> 'char [2]' lvalue "\n"
|   |     `-<<<NULL>>>
|   `-CallExpr 0x7f97d30202c8 <line:11:5, col:16> 'int'
|     |-ImplicitCastExpr 0x7f97d30202b0 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x7f97d3020258 <col:5> 'int (const char *, ...)' Function 0x7f97d301fc88 'printf' 'int (const char *, ...)'
|     `-ImplicitCastExpr 0x7f97d3020310 <col:12> 'const char *' <BitCast>
|       `-ImplicitCastExpr 0x7f97d30202f8 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x7f97d3020280 <col:12> 'char [2]' lvalue "\n"
|-FunctionDecl 0x7f97d301fc88 <line:7:9> col:9 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x7f97d301fd20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x7f97d301fd88 <col:9> Implicit printf 1 2
|-FunctionDecl 0x7f97d30204c0 <line:14:1, line:20:1> line:14:6 used swap 'void (int *, int *)'
| |-ParmVarDecl 0x7f97d3020370 <col:11, col:16> col:16 used x 'int *'
| |-ParmVarDecl 0x7f97d30203e8 <col:19, col:24> col:24 used y 'int *'
| `-CompoundStmt 0x7f97d3021888 <line:15:1, line:20:1>
|   |-DeclStmt 0x7f97d30205e0 <line:16:5, col:11>
|   | `-VarDecl 0x7f97d3020580 <col:5, col:9> col:9 used wk 'int'
|   |-BinaryOperator 0x7f97d3020698 <line:17:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x7f97d30205f8 <col:5> 'int' lvalue Var 0x7f97d3020580 'wk' 'int'
|   | `-ImplicitCastExpr 0x7f97d3020680 <col:8, col:9> 'int' <LValueToRValue>
|   |   `-UnaryOperator 0x7f97d3020660 <col:8, col:9> 'int' lvalue prefix '*'
|   |     `-ImplicitCastExpr 0x7f97d3020648 <col:9> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x7f97d3020620 <col:9> 'int *' lvalue ParmVar 0x7f97d3020370 'x' 'int *'
|   |-BinaryOperator 0x7f97d3020798 <line:18:5, col:9> 'int' '='
|   | |-UnaryOperator 0x7f97d3020700 <col:5, col:6> 'int' lvalue prefix '*'
|   | | `-ImplicitCastExpr 0x7f97d30206e8 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7f97d30206c0 <col:6> 'int *' lvalue ParmVar 0x7f97d3020370 'x' 'int *'
|   | `-ImplicitCastExpr 0x7f97d3020780 <col:8, col:9> 'int' <LValueToRValue>
|   |   `-UnaryOperator 0x7f97d3020760 <col:8, col:9> 'int' lvalue prefix '*'
|   |     `-ImplicitCastExpr 0x7f97d3020748 <col:9> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x7f97d3020720 <col:9> 'int *' lvalue ParmVar 0x7f97d30203e8 'y' 'int *'
|   `-BinaryOperator 0x7f97d3021860 <line:19:5, col:8> 'int' '='
|     |-UnaryOperator 0x7f97d3021800 <col:5, col:6> 'int' lvalue prefix '*'
|     | `-ImplicitCastExpr 0x7f97d30207e8 <col:6> 'int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x7f97d30207c0 <col:6> 'int *' lvalue ParmVar 0x7f97d30203e8 'y' 'int *'
|     `-ImplicitCastExpr 0x7f97d3021848 <col:8> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x7f97d3021820 <col:8> 'int' lvalue Var 0x7f97d3020580 'wk' 'int'
|-FunctionDecl 0x7f97d3021b10 <line:22:1, line:38:1> line:22:6 used quicksort 'void (int, int, int *)'
| |-ParmVarDecl 0x7f97d30218d8 <col:16, col:20> col:20 used first 'int'
| |-ParmVarDecl 0x7f97d3021950 <col:27, col:31> col:31 used last 'int'
| |-ParmVarDecl 0x7f97d30219d8 <col:37, col:43> col:41 used x 'int *':'int *'
| `-CompoundStmt 0x7f97d3022ba8 <line:23:1, line:38:1>
|   |-DeclStmt 0x7f97d3021d48 <line:24:5, col:20>
|   | |-VarDecl 0x7f97d3021bd8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x7f97d3021c50 <col:5, col:12> col:12 used j 'int'
|   | `-VarDecl 0x7f97d3021cc8 <col:5, col:15> col:15 used pivot 'int'
|   `-IfStmt 0x7f97d3022b70 <line:25:5, line:37:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-BinaryOperator 0x7f97d3021de0 <line:25:8, col:14> 'int' '<'
|     | |-ImplicitCastExpr 0x7f97d3021db0 <col:8> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x7f97d3021d60 <col:8> 'int' lvalue ParmVar 0x7f97d30218d8 'first' 'int'
|     | `-ImplicitCastExpr 0x7f97d3021dc8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x7f97d3021d88 <col:14> 'int' lvalue ParmVar 0x7f97d3021950 'last' 'int'
|     |-CompoundStmt 0x7f97d3022b28 <col:19, line:37:5>
|     | |-BinaryOperator 0x7f97d3021fc0 <line:26:9, col:31> 'int' '='
|     | | |-DeclRefExpr 0x7f97d3021e08 <col:9> 'int' lvalue Var 0x7f97d3021cc8 'pivot' 'int'
|     | | `-ImplicitCastExpr 0x7f97d3021fa8 <col:15, col:31> 'int' <LValueToRValue>
|     | |   `-ArraySubscriptExpr 0x7f97d3021f80 <col:15, col:31> 'int' lvalue
|     | |     |-ImplicitCastExpr 0x7f97d3021f68 <col:15> 'int *':'int *' <LValueToRValue>
|     | |     | `-DeclRefExpr 0x7f97d3021e30 <col:15> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     | |     `-BinaryOperator 0x7f97d3021f40 <col:17, col:30> 'int' '/'
|     | |       |-ParenExpr 0x7f97d3021f00 <col:17, col:28> 'int'
|     | |       | `-BinaryOperator 0x7f97d3021ed8 <col:18, col:24> 'int' '+'
|     | |       |   |-ImplicitCastExpr 0x7f97d3021ea8 <col:18> 'int' <LValueToRValue>
|     | |       |   | `-DeclRefExpr 0x7f97d3021e58 <col:18> 'int' lvalue ParmVar 0x7f97d30218d8 'first' 'int'
|     | |       |   `-ImplicitCastExpr 0x7f97d3021ec0 <col:24> 'int' <LValueToRValue>
|     | |       |     `-DeclRefExpr 0x7f97d3021e80 <col:24> 'int' lvalue ParmVar 0x7f97d3021950 'last' 'int'
|     | |       `-IntegerLiteral 0x7f97d3021f20 <col:30> 'int' 2
|     | |-BinaryOperator 0x7f97d3022050 <line:27:9, col:11> 'int' '='
|     | | |-DeclRefExpr 0x7f97d3021fe8 <col:9> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     | | `-ImplicitCastExpr 0x7f97d3022038 <col:11> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x7f97d3022010 <col:11> 'int' lvalue ParmVar 0x7f97d30218d8 'first' 'int'
|     | |-BinaryOperator 0x7f97d30220e0 <line:28:9, col:11> 'int' '='
|     | | |-DeclRefExpr 0x7f97d3022078 <col:9> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | | `-ImplicitCastExpr 0x7f97d30220c8 <col:11> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x7f97d30220a0 <col:11> 'int' lvalue ParmVar 0x7f97d3021950 'last' 'int'
|     | |-WhileStmt 0x7f97d3022830 <line:29:9, line:33:9>
|     | | |-<<<NULL>>>
|     | | |-BinaryOperator 0x7f97d3022188 <line:29:15, col:18> 'int' '<='
|     | | | |-ImplicitCastExpr 0x7f97d3022158 <col:15> 'int' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x7f97d3022108 <col:15> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     | | | `-ImplicitCastExpr 0x7f97d3022170 <col:18> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x7f97d3022130 <col:18> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | | `-CompoundStmt 0x7f97d3022800 <col:20, line:33:9>
|     | |   |-WhileStmt 0x7f97d3022320 <line:30:13, col:32>
|     | |   | |-<<<NULL>>>
|     | |   | |-BinaryOperator 0x7f97d30222b0 <col:19, col:24> 'int' '<'
|     | |   | | |-ImplicitCastExpr 0x7f97d3022280 <col:19, col:22> 'int' <LValueToRValue>
|     | |   | | | `-ArraySubscriptExpr 0x7f97d3022230 <col:19, col:22> 'int' lvalue
|     | |   | | |   |-ImplicitCastExpr 0x7f97d3022200 <col:19> 'int *':'int *' <LValueToRValue>
|     | |   | | |   | `-DeclRefExpr 0x7f97d30221b0 <col:19> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     | |   | | |   `-ImplicitCastExpr 0x7f97d3022218 <col:21> 'int' <LValueToRValue>
|     | |   | | |     `-DeclRefExpr 0x7f97d30221d8 <col:21> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     | |   | | `-ImplicitCastExpr 0x7f97d3022298 <col:24> 'int' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x7f97d3022258 <col:24> 'int' lvalue Var 0x7f97d3021cc8 'pivot' 'int'
|     | |   | `-UnaryOperator 0x7f97d3022300 <col:31, col:32> 'int' postfix '++'
|     | |   |   `-DeclRefExpr 0x7f97d30222d8 <col:31> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     | |   |-WhileStmt 0x7f97d30224b0 <line:31:13, col:32>
|     | |   | |-<<<NULL>>>
|     | |   | |-BinaryOperator 0x7f97d3022440 <col:19, col:24> 'int' '>'
|     | |   | | |-ImplicitCastExpr 0x7f97d3022410 <col:19, col:22> 'int' <LValueToRValue>
|     | |   | | | `-ArraySubscriptExpr 0x7f97d30223c0 <col:19, col:22> 'int' lvalue
|     | |   | | |   |-ImplicitCastExpr 0x7f97d3022390 <col:19> 'int *':'int *' <LValueToRValue>
|     | |   | | |   | `-DeclRefExpr 0x7f97d3022340 <col:19> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     | |   | | |   `-ImplicitCastExpr 0x7f97d30223a8 <col:21> 'int' <LValueToRValue>
|     | |   | | |     `-DeclRefExpr 0x7f97d3022368 <col:21> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | |   | | `-ImplicitCastExpr 0x7f97d3022428 <col:24> 'int' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x7f97d30223e8 <col:24> 'int' lvalue Var 0x7f97d3021cc8 'pivot' 'int'
|     | |   | `-UnaryOperator 0x7f97d3022490 <col:31, col:32> 'int' postfix '--'
|     | |   |   `-DeclRefExpr 0x7f97d3022468 <col:31> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | |   `-IfStmt 0x7f97d30227b8 <line:32:13, col:42>
|     | |     |-<<<NULL>>>
|     | |     |-<<<NULL>>>
|     | |     |-BinaryOperator 0x7f97d3022550 <col:16, col:19> 'int' '<='
|     | |     | |-ImplicitCastExpr 0x7f97d3022520 <col:16> 'int' <LValueToRValue>
|     | |     | | `-DeclRefExpr 0x7f97d30224d0 <col:16> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     | |     | `-ImplicitCastExpr 0x7f97d3022538 <col:19> 'int' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x7f97d30224f8 <col:19> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | |     |-CallExpr 0x7f97d3022780 <col:22, col:42> 'void'
|     | |     | |-ImplicitCastExpr 0x7f97d3022768 <col:22> 'void (*)(int *, int *)' <FunctionToPointerDecay>
|     | |     | | `-DeclRefExpr 0x7f97d3022578 <col:22> 'void (int *, int *)' Function 0x7f97d30204c0 'swap' 'void (int *, int *)'
|     | |     | |-UnaryOperator 0x7f97d3022650 <col:27, col:33> 'int *' prefix '&'
|     | |     | | `-ArraySubscriptExpr 0x7f97d3022628 <col:28, col:33> 'int' lvalue
|     | |     | |   |-ImplicitCastExpr 0x7f97d3022610 <col:28> 'int *':'int *' <LValueToRValue>
|     | |     | |   | `-DeclRefExpr 0x7f97d30225a0 <col:28> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     | |     | |   `-UnaryOperator 0x7f97d30225f0 <col:30, col:31> 'int' postfix '++'
|     | |     | |     `-DeclRefExpr 0x7f97d30225c8 <col:30> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     | |     | `-UnaryOperator 0x7f97d3022720 <col:35, col:41> 'int *' prefix '&'
|     | |     |   `-ArraySubscriptExpr 0x7f97d30226f8 <col:36, col:41> 'int' lvalue
|     | |     |     |-ImplicitCastExpr 0x7f97d30226e0 <col:36> 'int *':'int *' <LValueToRValue>
|     | |     |     | `-DeclRefExpr 0x7f97d3022670 <col:36> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     | |     |     `-UnaryOperator 0x7f97d30226c0 <col:38, col:39> 'int' postfix '--'
|     | |     |       `-DeclRefExpr 0x7f97d3022698 <col:38> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | |     `-<<<NULL>>>
|     | |-CallExpr 0x7f97d3022960 <line:35:9, col:29> 'void'
|     | | |-ImplicitCastExpr 0x7f97d3022948 <col:9> 'void (*)(int, int, int *)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x7f97d3022850 <col:9> 'void (int, int, int *)' Function 0x7f97d3021b10 'quicksort' 'void (int, int, int *)'
|     | | |-ImplicitCastExpr 0x7f97d30229a0 <col:19> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x7f97d3022878 <col:19> 'int' lvalue ParmVar 0x7f97d30218d8 'first' 'int'
|     | | |-ImplicitCastExpr 0x7f97d30229b8 <col:26> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x7f97d30228a0 <col:26> 'int' lvalue Var 0x7f97d3021c50 'j' 'int'
|     | | `-ImplicitCastExpr 0x7f97d30229d0 <col:28> 'int *':'int *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x7f97d30228c8 <col:28> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     | `-CallExpr 0x7f97d3022aa0 <line:36:9, col:29> 'void'
|     |   |-ImplicitCastExpr 0x7f97d3022a88 <col:9> 'void (*)(int, int, int *)' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x7f97d30229e8 <col:9> 'void (int, int, int *)' Function 0x7f97d3021b10 'quicksort' 'void (int, int, int *)'
|     |   |-ImplicitCastExpr 0x7f97d3022ae0 <col:19> 'int' <LValueToRValue>
|     |   | `-DeclRefExpr 0x7f97d3022a10 <col:19> 'int' lvalue Var 0x7f97d3021bd8 'i' 'int'
|     |   |-ImplicitCastExpr 0x7f97d3022af8 <col:22> 'int' <LValueToRValue>
|     |   | `-DeclRefExpr 0x7f97d3022a38 <col:22> 'int' lvalue ParmVar 0x7f97d3021950 'last' 'int'
|     |   `-ImplicitCastExpr 0x7f97d3022b10 <col:28> 'int *':'int *' <LValueToRValue>
|     |     `-DeclRefExpr 0x7f97d3022a60 <col:28> 'int *':'int *' lvalue ParmVar 0x7f97d30219d8 'x' 'int *':'int *'
|     `-<<<NULL>>>
|-FunctionDecl 0x7f97d3022c18 <line:40:1, line:47:1> line:40:6 main 'void ()'
| `-CompoundStmt 0x7f97d30236a8 <col:12, line:47:1>
|   |-DeclStmt 0x7f97d3022e40 <line:41:5, col:20>
|   | |-VarDecl 0x7f97d3022d30 <col:5, col:13> col:9 used x 'int [10]'
|   | `-VarDecl 0x7f97d3022da8 <col:5, col:18> col:16 used n 'int' cinit
|   |   `-IntegerLiteral 0x7f97d3022e08 <col:18> 'int' 10
|   |-ForStmt 0x7f97d30233b8 <line:42:5, line:44:5>
|   | |-DeclStmt 0x7f97d3022ef0 <line:42:9, col:16>
|   | | `-VarDecl 0x7f97d3022e70 <col:9, col:15> col:13 used i 'int' cinit
|   | |   `-IntegerLiteral 0x7f97d3022ed0 <col:15> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x7f97d3022f88 <col:17, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x7f97d3022f58 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7f97d3022f08 <col:17> 'int' lvalue Var 0x7f97d3022e70 'i' 'int'
|   | | `-ImplicitCastExpr 0x7f97d3022f70 <col:19> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7f97d3022f30 <col:19> 'int' lvalue Var 0x7f97d3022da8 'n' 'int'
|   | |-UnaryOperator 0x7f97d3022fd8 <col:21, col:22> 'int' postfix '++'
|   | | `-DeclRefExpr 0x7f97d3022fb0 <col:21> 'int' lvalue Var 0x7f97d3022e70 'i' 'int'
|   | `-CompoundStmt 0x7f97d3023398 <col:25, line:44:5>
|   |   `-CallExpr 0x7f97d3023330 <line:43:13, col:29> 'int'
|   |     |-ImplicitCastExpr 0x7f97d3023318 <col:13> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x7f97d3023190 <col:13> 'int (const char *__restrict, ...)' Function 0x7f97d3023038 'scanf' 'int (const char *__restrict, ...)'
|   |     |-ImplicitCastExpr 0x7f97d3023380 <col:19> 'const char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x7f97d3023368 <col:19> 'char *' <ArrayToPointerDecay>
|   |     |   `-StringLiteral 0x7f97d30231f8 <col:19> 'char [3]' lvalue "%d"
|   |     `-UnaryOperator 0x7f97d30232d0 <col:24, col:28> 'int *' prefix '&'
|   |       `-ArraySubscriptExpr 0x7f97d30232a8 <col:25, col:28> 'int' lvalue
|   |         |-ImplicitCastExpr 0x7f97d3023278 <col:25> 'int *' <ArrayToPointerDecay>
|   |         | `-DeclRefExpr 0x7f97d3023228 <col:25> 'int [10]' lvalue Var 0x7f97d3022d30 'x' 'int [10]'
|   |         `-ImplicitCastExpr 0x7f97d3023290 <col:27> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x7f97d3023250 <col:27> 'int' lvalue Var 0x7f97d3022e70 'i' 'int'
|   |-CallExpr 0x7f97d3023500 <line:45:5, col:22> 'void'
|   | |-ImplicitCastExpr 0x7f97d30234e8 <col:5> 'void (*)(int, int, int *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x7f97d30233f0 <col:5> 'void (int, int, int *)' Function 0x7f97d3021b10 'quicksort' 'void (int, int, int *)'
|   | |-IntegerLiteral 0x7f97d3023418 <col:15> 'int' 0
|   | |-BinaryOperator 0x7f97d3023498 <col:17, col:19> 'int' '-'
|   | | |-ImplicitCastExpr 0x7f97d3023480 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7f97d3023438 <col:17> 'int' lvalue Var 0x7f97d3022da8 'n' 'int'
|   | | `-IntegerLiteral 0x7f97d3023460 <col:19> 'int' 1
|   | `-ImplicitCastExpr 0x7f97d3023540 <col:21> 'int *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x7f97d30234c0 <col:21> 'int [10]' lvalue Var 0x7f97d3022d30 'x' 'int [10]'
|   `-CallExpr 0x7f97d3023640 <line:46:5, col:13> 'void'
|     |-ImplicitCastExpr 0x7f97d3023628 <col:5> 'void (*)(int, int *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x7f97d3023558 <col:5> 'void (int, int *)' Function 0x7f97d301f970 'disp' 'void (int, int *)'
|     |-ImplicitCastExpr 0x7f97d3023678 <col:10> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x7f97d3023580 <col:10> 'int' lvalue Var 0x7f97d3022da8 'n' 'int'
|     `-ImplicitCastExpr 0x7f97d3023690 <col:12> 'int *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x7f97d30235a8 <col:12> 'int [10]' lvalue Var 0x7f97d3022d30 'x' 'int [10]'
`-FunctionDecl 0x7f97d3023038 <line:43:13> col:13 implicit used scanf 'int (const char *__restrict, ...)' extern
  |-ParmVarDecl 0x7f97d30230d0 <<invalid sloc>> <invalid sloc> 'const char *__restrict'
  `-FormatAttr 0x7f97d3023138 <col:13> Implicit scanf 1 2
