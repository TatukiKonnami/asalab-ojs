TranslationUnitDecl 0x7f964f8180d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f964f818620 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f964f818340 '__int128'
|-TypedefDecl 0x7f964f818690 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f964f818360 'unsigned __int128'
|-TypedefDecl 0x7f964f818968 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7f964f818770 'struct __NSConstantString_tag'
|   `-Record 0x7f964f8186e8 '__NSConstantString_tag'
|-TypedefDecl 0x7f964f818a00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f964f8189c0 'char *'
|   `-BuiltinType 0x7f964f818160 'char'
|-TypedefDecl 0x7f964f818cc8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7f964f818c70 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7f964f818ae0 'struct __va_list_tag'
|     `-Record 0x7f964f818a58 '__va_list_tag'
|-FunctionDecl 0x7f964f818d68 <b.c:3:1, line:30:1> line:3:6 main 'void ()'
| `-CompoundStmt 0x7f964f8693d8 <col:12, line:30:1>
|   |-DeclStmt 0x7f964f8661d0 <line:4:5, col:33>
|   | |-VarDecl 0x7f964f865ec0 <col:5, col:13> col:9 used x 'int [10]'
|   | |-VarDecl 0x7f964f865f38 <col:5, col:18> col:16 used n 'int' cinit
|   | | `-IntegerLiteral 0x7f964f865f98 <col:18> 'int' 10
|   | |-VarDecl 0x7f964f865fd0 <col:5, col:22> col:22 used i 'int'
|   | |-VarDecl 0x7f964f866048 <col:5, col:25> col:25 used j 'int'
|   | |-VarDecl 0x7f964f8660c0 <col:5, col:28> col:28 used k 'int'
|   | `-VarDecl 0x7f964f866138 <col:5, col:31> col:31 used wk 'int'
|   |-ForStmt 0x7f964f8667a8 <line:5:5, line:7:5>
|   | |-BinaryOperator 0x7f964f866230 <line:5:9, col:11> 'int' '='
|   | | |-DeclRefExpr 0x7f964f8661e8 <col:9> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   | | `-IntegerLiteral 0x7f964f866210 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x7f964f8662d8 <col:13, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x7f964f8662a8 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7f964f866258 <col:13> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   | | `-ImplicitCastExpr 0x7f964f8662c0 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7f964f866280 <col:15> 'int' lvalue Var 0x7f964f865f38 'n' 'int'
|   | |-UnaryOperator 0x7f964f866328 <col:17, col:18> 'int' postfix '++'
|   | | `-DeclRefExpr 0x7f964f866300 <col:17> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   | `-CompoundStmt 0x7f964f866788 <col:21, line:7:5>
|   |   `-CallExpr 0x7f964f866720 <line:6:9, col:25> 'int'
|   |     |-ImplicitCastExpr 0x7f964f866708 <col:9> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x7f964f866520 <col:9> 'int (const char *__restrict, ...)' Function 0x7f964f8663c8 'scanf' 'int (const char *__restrict, ...)'
|   |     |-ImplicitCastExpr 0x7f964f866770 <col:15> 'const char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x7f964f866758 <col:15> 'char *' <ArrayToPointerDecay>
|   |     |   `-StringLiteral 0x7f964f866588 <col:15> 'char [3]' lvalue "%d"
|   |     `-UnaryOperator 0x7f964f866690 <col:20, col:24> 'int *' prefix '&'
|   |       `-ArraySubscriptExpr 0x7f964f866668 <col:21, col:24> 'int' lvalue
|   |         |-ImplicitCastExpr 0x7f964f866638 <col:21> 'int *' <ArrayToPointerDecay>
|   |         | `-DeclRefExpr 0x7f964f8665b8 <col:21> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         `-ImplicitCastExpr 0x7f964f866650 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x7f964f8665e0 <col:23> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |-ForStmt 0x7f964f868bc0 <line:8:5, line:23:5>
|   | |-BinaryOperator 0x7f964f866928 <line:8:9, col:17> 'int' ','
|   | | |-BinaryOperator 0x7f964f866828 <col:9, col:11> 'int' '='
|   | | | |-DeclRefExpr 0x7f964f8667e0 <col:9> 'int' lvalue Var 0x7f964f866048 'j' 'int'
|   | | | `-IntegerLiteral 0x7f964f866808 <col:11> 'int' 0
|   | | `-BinaryOperator 0x7f964f866900 <col:13, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x7f964f866850 <col:13> 'int' lvalue Var 0x7f964f8660c0 'k' 'int'
|   | |   `-BinaryOperator 0x7f964f8668d8 <col:15, col:17> 'int' '-'
|   | |     |-ImplicitCastExpr 0x7f964f8668c0 <col:15> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x7f964f866878 <col:15> 'int' lvalue Var 0x7f964f865f38 'n' 'int'
|   | |     `-IntegerLiteral 0x7f964f8668a0 <col:17> 'int' 2
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x7f964f8669d0 <col:19, col:22> 'int' '<='
|   | | |-ImplicitCastExpr 0x7f964f8669a0 <col:19> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7f964f866950 <col:19> 'int' lvalue Var 0x7f964f866048 'j' 'int'
|   | | `-ImplicitCastExpr 0x7f964f8669b8 <col:22> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7f964f866978 <col:22> 'int' lvalue Var 0x7f964f8660c0 'k' 'int'
|   | |-BinaryOperator 0x7f964f866a88 <col:24, col:29> 'int' ','
|   | | |-UnaryOperator 0x7f964f866a20 <col:24, col:25> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x7f964f8669f8 <col:24> 'int' lvalue Var 0x7f964f866048 'j' 'int'
|   | | `-UnaryOperator 0x7f964f866a68 <col:28, col:29> 'int' postfix '--'
|   | |   `-DeclRefExpr 0x7f964f866a40 <col:28> 'int' lvalue Var 0x7f964f8660c0 'k' 'int'
|   | `-CompoundStmt 0x7f964f868b98 <col:32, line:23:5>
|   |   |-ForStmt 0x7f964f8682f0 <line:9:9, line:15:9>
|   |   | |-BinaryOperator 0x7f964f866b18 <line:9:13, col:15> 'int' '='
|   |   | | |-DeclRefExpr 0x7f964f866ab0 <col:13> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x7f964f866b00 <col:15> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x7f964f866ad8 <col:15> 'int' lvalue Var 0x7f964f866048 'j' 'int'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x7f964f866bc0 <col:17, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x7f964f866b90 <col:17> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x7f964f866b40 <col:17> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x7f964f866ba8 <col:20> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x7f964f866b68 <col:20> 'int' lvalue Var 0x7f964f8660c0 'k' 'int'
|   |   | |-UnaryOperator 0x7f964f866c10 <col:22, col:23> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x7f964f866be8 <col:22> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   | `-CompoundStmt 0x7f964f8682d0 <col:26, line:15:9>
|   |   |   `-IfStmt 0x7f964f868298 <line:10:13, line:14:13>
|   |   |     |-<<<NULL>>>
|   |   |     |-<<<NULL>>>
|   |   |     |-BinaryOperator 0x7f964f867e00 <line:10:16, col:26> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x7f964f866dc8 <col:16, col:19> 'int' <LValueToRValue>
|   |   |     | | `-ArraySubscriptExpr 0x7f964f866cb0 <col:16, col:19> 'int' lvalue
|   |   |     | |   |-ImplicitCastExpr 0x7f964f866c80 <col:16> 'int *' <ArrayToPointerDecay>
|   |   |     | |   | `-DeclRefExpr 0x7f964f866c30 <col:16> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     | |   `-ImplicitCastExpr 0x7f964f866c98 <col:18> 'int' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x7f964f866c58 <col:18> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   |     | `-ImplicitCastExpr 0x7f964f866de0 <col:21, col:26> 'int' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x7f964f866da0 <col:21, col:26> 'int' lvalue
|   |   |     |     |-ImplicitCastExpr 0x7f964f866d88 <col:21> 'int *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x7f964f866cd8 <col:21> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     |     `-BinaryOperator 0x7f964f866d60 <col:23, col:25> 'int' '+'
|   |   |     |       |-ImplicitCastExpr 0x7f964f866d48 <col:23> 'int' <LValueToRValue>
|   |   |     |       | `-DeclRefExpr 0x7f964f866d00 <col:23> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   |     |       `-IntegerLiteral 0x7f964f866d28 <col:25> 'int' 1
|   |   |     |-CompoundStmt 0x7f964f868268 <col:28, line:14:13>
|   |   |     | |-BinaryOperator 0x7f964f867f10 <line:11:17, col:25> 'int' '='
|   |   |     | | |-DeclRefExpr 0x7f964f867e28 <col:17> 'int' lvalue Var 0x7f964f866138 'wk' 'int'
|   |   |     | | `-ImplicitCastExpr 0x7f964f867ef8 <col:22, col:25> 'int' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x7f964f867ed0 <col:22, col:25> 'int' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x7f964f867ea0 <col:22> 'int *' <ArrayToPointerDecay>
|   |   |     | |     | `-DeclRefExpr 0x7f964f867e50 <col:22> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     | |     `-ImplicitCastExpr 0x7f964f867eb8 <col:24> 'int' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x7f964f867e78 <col:24> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   |     | |-BinaryOperator 0x7f964f8680e8 <line:12:17, col:29> 'int' '='
|   |   |     | | |-ArraySubscriptExpr 0x7f964f867fb8 <col:17, col:20> 'int' lvalue
|   |   |     | | | |-ImplicitCastExpr 0x7f964f867f88 <col:17> 'int *' <ArrayToPointerDecay>
|   |   |     | | | | `-DeclRefExpr 0x7f964f867f38 <col:17> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     | | | `-ImplicitCastExpr 0x7f964f867fa0 <col:19> 'int' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x7f964f867f60 <col:19> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   |     | | `-ImplicitCastExpr 0x7f964f8680d0 <col:24, col:29> 'int' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x7f964f8680a8 <col:24, col:29> 'int' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x7f964f868090 <col:24> 'int *' <ArrayToPointerDecay>
|   |   |     | |     | `-DeclRefExpr 0x7f964f867fe0 <col:24> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     | |     `-BinaryOperator 0x7f964f868068 <col:26, col:28> 'int' '+'
|   |   |     | |       |-ImplicitCastExpr 0x7f964f868050 <col:26> 'int' <LValueToRValue>
|   |   |     | |       | `-DeclRefExpr 0x7f964f868008 <col:26> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   |     | |       `-IntegerLiteral 0x7f964f868030 <col:28> 'int' 1
|   |   |     | `-BinaryOperator 0x7f964f868240 <line:13:17, col:26> 'int' '='
|   |   |     |   |-ArraySubscriptExpr 0x7f964f8681d8 <col:17, col:22> 'int' lvalue
|   |   |     |   | |-ImplicitCastExpr 0x7f964f8681c0 <col:17> 'int *' <ArrayToPointerDecay>
|   |   |     |   | | `-DeclRefExpr 0x7f964f868110 <col:17> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     |   | `-BinaryOperator 0x7f964f868198 <col:19, col:21> 'int' '+'
|   |   |     |   |   |-ImplicitCastExpr 0x7f964f868180 <col:19> 'int' <LValueToRValue>
|   |   |     |   |   | `-DeclRefExpr 0x7f964f868138 <col:19> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   |     |   |   `-IntegerLiteral 0x7f964f868160 <col:21> 'int' 1
|   |   |     |   `-ImplicitCastExpr 0x7f964f868228 <col:26> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x7f964f868200 <col:26> 'int' lvalue Var 0x7f964f866138 'wk' 'int'
|   |   |     `-<<<NULL>>>
|   |   `-ForStmt 0x7f964f868b60 <line:16:9, line:22:9>
|   |     |-BinaryOperator 0x7f964f868390 <line:16:13, col:15> 'int' '='
|   |     | |-DeclRefExpr 0x7f964f868328 <col:13> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |     | `-ImplicitCastExpr 0x7f964f868378 <col:15> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x7f964f868350 <col:15> 'int' lvalue Var 0x7f964f8660c0 'k' 'int'
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x7f964f868438 <col:17, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x7f964f868408 <col:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x7f964f8683b8 <col:17> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |     | `-ImplicitCastExpr 0x7f964f868420 <col:19> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x7f964f8683e0 <col:19> 'int' lvalue Var 0x7f964f866048 'j' 'int'
|   |     |-UnaryOperator 0x7f964f868488 <col:21, col:22> 'int' postfix '--'
|   |     | `-DeclRefExpr 0x7f964f868460 <col:21> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |     `-CompoundStmt 0x7f964f868b40 <col:25, line:22:9>
|   |       `-IfStmt 0x7f964f868b08 <line:17:13, line:21:13>
|   |         |-<<<NULL>>>
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x7f964f868670 <line:17:16, col:26> 'int' '<'
|   |         | |-ImplicitCastExpr 0x7f964f868640 <col:16, col:19> 'int' <LValueToRValue>
|   |         | | `-ArraySubscriptExpr 0x7f964f868528 <col:16, col:19> 'int' lvalue
|   |         | |   |-ImplicitCastExpr 0x7f964f8684f8 <col:16> 'int *' <ArrayToPointerDecay>
|   |         | |   | `-DeclRefExpr 0x7f964f8684a8 <col:16> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         | |   `-ImplicitCastExpr 0x7f964f868510 <col:18> 'int' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x7f964f8684d0 <col:18> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |         | `-ImplicitCastExpr 0x7f964f868658 <col:21, col:26> 'int' <LValueToRValue>
|   |         |   `-ArraySubscriptExpr 0x7f964f868618 <col:21, col:26> 'int' lvalue
|   |         |     |-ImplicitCastExpr 0x7f964f868600 <col:21> 'int *' <ArrayToPointerDecay>
|   |         |     | `-DeclRefExpr 0x7f964f868550 <col:21> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         |     `-BinaryOperator 0x7f964f8685d8 <col:23, col:25> 'int' '-'
|   |         |       |-ImplicitCastExpr 0x7f964f8685c0 <col:23> 'int' <LValueToRValue>
|   |         |       | `-DeclRefExpr 0x7f964f868578 <col:23> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |         |       `-IntegerLiteral 0x7f964f8685a0 <col:25> 'int' 1
|   |         |-CompoundStmt 0x7f964f868ad8 <col:28, line:21:13>
|   |         | |-BinaryOperator 0x7f964f868780 <line:18:17, col:25> 'int' '='
|   |         | | |-DeclRefExpr 0x7f964f868698 <col:17> 'int' lvalue Var 0x7f964f866138 'wk' 'int'
|   |         | | `-ImplicitCastExpr 0x7f964f868768 <col:22, col:25> 'int' <LValueToRValue>
|   |         | |   `-ArraySubscriptExpr 0x7f964f868740 <col:22, col:25> 'int' lvalue
|   |         | |     |-ImplicitCastExpr 0x7f964f868710 <col:22> 'int *' <ArrayToPointerDecay>
|   |         | |     | `-DeclRefExpr 0x7f964f8686c0 <col:22> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         | |     `-ImplicitCastExpr 0x7f964f868728 <col:24> 'int' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x7f964f8686e8 <col:24> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |         | |-BinaryOperator 0x7f964f868958 <line:19:17, col:29> 'int' '='
|   |         | | |-ArraySubscriptExpr 0x7f964f868828 <col:17, col:20> 'int' lvalue
|   |         | | | |-ImplicitCastExpr 0x7f964f8687f8 <col:17> 'int *' <ArrayToPointerDecay>
|   |         | | | | `-DeclRefExpr 0x7f964f8687a8 <col:17> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         | | | `-ImplicitCastExpr 0x7f964f868810 <col:19> 'int' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x7f964f8687d0 <col:19> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |         | | `-ImplicitCastExpr 0x7f964f868940 <col:24, col:29> 'int' <LValueToRValue>
|   |         | |   `-ArraySubscriptExpr 0x7f964f868918 <col:24, col:29> 'int' lvalue
|   |         | |     |-ImplicitCastExpr 0x7f964f868900 <col:24> 'int *' <ArrayToPointerDecay>
|   |         | |     | `-DeclRefExpr 0x7f964f868850 <col:24> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         | |     `-BinaryOperator 0x7f964f8688d8 <col:26, col:28> 'int' '-'
|   |         | |       |-ImplicitCastExpr 0x7f964f8688c0 <col:26> 'int' <LValueToRValue>
|   |         | |       | `-DeclRefExpr 0x7f964f868878 <col:26> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |         | |       `-IntegerLiteral 0x7f964f8688a0 <col:28> 'int' 1
|   |         | `-BinaryOperator 0x7f964f868ab0 <line:20:17, col:26> 'int' '='
|   |         |   |-ArraySubscriptExpr 0x7f964f868a48 <col:17, col:22> 'int' lvalue
|   |         |   | |-ImplicitCastExpr 0x7f964f868a30 <col:17> 'int *' <ArrayToPointerDecay>
|   |         |   | | `-DeclRefExpr 0x7f964f868980 <col:17> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |         |   | `-BinaryOperator 0x7f964f868a08 <col:19, col:21> 'int' '-'
|   |         |   |   |-ImplicitCastExpr 0x7f964f8689f0 <col:19> 'int' <LValueToRValue>
|   |         |   |   | `-DeclRefExpr 0x7f964f8689a8 <col:19> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |         |   |   `-IntegerLiteral 0x7f964f8689d0 <col:21> 'int' 1
|   |         |   `-ImplicitCastExpr 0x7f964f868a98 <col:26> 'int' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x7f964f868a70 <col:26> 'int' lvalue Var 0x7f964f866138 'wk' 'int'
|   |         `-<<<NULL>>>
|   |-ForStmt 0x7f964f8692d0 <line:24:5, line:28:5>
|   | |-BinaryOperator 0x7f964f868c40 <line:24:9, col:11> 'int' '='
|   | | |-DeclRefExpr 0x7f964f868bf8 <col:9> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   | | `-IntegerLiteral 0x7f964f868c20 <col:11> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x7f964f868ce8 <col:13, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x7f964f868cb8 <col:13> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x7f964f868c68 <col:13> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   | | `-ImplicitCastExpr 0x7f964f868cd0 <col:15> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7f964f868c90 <col:15> 'int' lvalue Var 0x7f964f865f38 'n' 'int'
|   | |-UnaryOperator 0x7f964f868d38 <col:17, col:18> 'int' postfix '++'
|   | | `-DeclRefExpr 0x7f964f868d10 <col:17> 'int' lvalue Var 0x7f964f865f38 'n' 'int'
|   | `-CompoundStmt 0x7f964f8692a8 <col:21, line:28:5>
|   |   |-CallExpr 0x7f964f869018 <line:25:9, col:27> 'int'
|   |   | |-ImplicitCastExpr 0x7f964f869000 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x7f964f868ec0 <col:9> 'int (const char *, ...)' Function 0x7f964f868d58 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x7f964f869068 <col:16> 'const char *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x7f964f869050 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x7f964f868f28 <col:16> 'char [4]' lvalue "%d "
|   |   | `-ImplicitCastExpr 0x7f964f869080 <col:23, col:26> 'int' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x7f964f868fd8 <col:23, col:26> 'int' lvalue
|   |   |     |-ImplicitCastExpr 0x7f964f868fa8 <col:23> 'int *' <ArrayToPointerDecay>
|   |   |     | `-DeclRefExpr 0x7f964f868f58 <col:23> 'int [10]' lvalue Var 0x7f964f865ec0 'x' 'int [10]'
|   |   |     `-ImplicitCastExpr 0x7f964f868fc0 <col:25> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x7f964f868f80 <col:25> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |   `-IfStmt 0x7f964f869270 <line:26:9, line:27:24>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x7f964f869140 <line:26:12, col:18> 'int' '=='
|   |     | |-BinaryOperator 0x7f964f8690f8 <col:12, col:14> 'int' '%'
|   |     | | |-ImplicitCastExpr 0x7f964f8690e0 <col:12> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x7f964f869098 <col:12> 'int' lvalue Var 0x7f964f865fd0 'i' 'int'
|   |     | | `-IntegerLiteral 0x7f964f8690c0 <col:14> 'int' 10
|   |     | `-IntegerLiteral 0x7f964f869120 <col:18> 'int' 9
|   |     |-CallExpr 0x7f964f869210 <line:27:13, col:24> 'int'
|   |     | |-ImplicitCastExpr 0x7f964f8691f8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x7f964f869168 <col:13> 'int (const char *, ...)' Function 0x7f964f868d58 'printf' 'int (const char *, ...)'
|   |     | `-ImplicitCastExpr 0x7f964f869258 <col:20> 'const char *' <BitCast>
|   |     |   `-ImplicitCastExpr 0x7f964f869240 <col:20> 'char *' <ArrayToPointerDecay>
|   |     |     `-StringLiteral 0x7f964f8691c8 <col:20> 'char [2]' lvalue "\n"
|   |     `-<<<NULL>>>
|   `-CallExpr 0x7f964f869378 <line:29:5, col:16> 'int'
|     |-ImplicitCastExpr 0x7f964f869360 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x7f964f869308 <col:5> 'int (const char *, ...)' Function 0x7f964f868d58 'printf' 'int (const char *, ...)'
|     `-ImplicitCastExpr 0x7f964f8693c0 <col:12> 'const char *' <BitCast>
|       `-ImplicitCastExpr 0x7f964f8693a8 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x7f964f869330 <col:12> 'char [2]' lvalue "\n"
|-FunctionDecl 0x7f964f8663c8 <line:6:9> col:9 implicit used scanf 'int (const char *__restrict, ...)' extern
| |-ParmVarDecl 0x7f964f866460 <<invalid sloc>> <invalid sloc> 'const char *__restrict'
| `-FormatAttr 0x7f964f8664c8 <col:9> Implicit scanf 1 2
`-FunctionDecl 0x7f964f868d58 <line:25:9> col:9 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x7f964f868e00 <<invalid sloc>> <invalid sloc> 'const char *'
  `-FormatAttr 0x7f964f868e68 <col:9> Implicit printf 1 2
